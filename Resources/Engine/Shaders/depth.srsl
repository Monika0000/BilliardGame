ShaderType Canvas;

PolygonMode Fill;
CullMode Back;
DepthCompare LessOrEqual;
PrimitiveTopology TriangleList;
BlendEnabled true;
DepthWrite false;
DepthTest false;

float LinearizeDepth(float depth) {
    float zNear = 0.1;
    float zFar  = 100.0;

    // преобразуем обратно в NDC
    float z = depth * 2.0 - 1.0;
    return (2.0 * zNear * zFar) / (zFar + zNear - z * (zFar - zNear));
}

void fragment() {
    float zNear = 0.1;
    float zFar  = 100.0;

    float depth = LinearizeDepth(gl_FragCoord.z) / zFar;
	COLOR = vec4(vec3(depth), 1);
}

void vertex() {

}