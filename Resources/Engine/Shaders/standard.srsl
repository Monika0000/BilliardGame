ShaderType Spatial;

PolygonMode Fill;
CullMode Back;
DepthCompare LessOrEqual;
PrimitiveTopology TriangleList;
BlendEnabled false; 
DepthWrite true;
DepthTest true;

uniform vec4 color;
uniform sampler2D diffuse;

void fragment() {
    vec3 diffuse_albedo = texture(diffuse, UV).rgb * color.rgb;

    vec3 norm = vec3(NORMAL.x + NORMAL.y + NORMAL.z) / 12.0;

	COLOR = vec4(diffuse_albedo + norm, 1.0);
}

void vertex() {

}